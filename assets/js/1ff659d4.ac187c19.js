"use strict";(self.webpackChunkdocument=self.webpackChunkdocument||[]).push([[500],{2785:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>s});const a=JSON.parse('{"id":"Installation","title":"Getting Started","description":"Learn how to install and set up PivotHead in your project","source":"@site/docs/Installation.md","sourceDirName":".","slug":"/Installation","permalink":"/PivotHead/docs/Installation","draft":false,"unlisted":false,"editUrl":"https://github.com/mindfiredigital/PivotHead/tree/main/documentation/docs/Installation.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Getting Started","description":"Learn how to install and set up PivotHead in your project"},"sidebar":"tutorialSidebar","previous":{"title":"Why Use PivotHead","permalink":"/PivotHead/docs/Why-we-use-pivothead"},"next":{"title":"Tutorials","permalink":"/PivotHead/docs/category/tutorials"}}');var i=t(4848),o=t(8453);const r={sidebar_position:3,title:"Getting Started",description:"Learn how to install and set up PivotHead in your project"},l="Getting Started with PivotHead",d={},s=[{value:"Installation",id:"installation",level:2},{value:"Basic Setup",id:"basic-setup",level:2},{value:"Understanding the Configuration",id:"understanding-the-configuration",level:2},{value:"Data",id:"data",level:3},{value:"Rows and Columns",id:"rows-and-columns",level:3},{value:"Measures",id:"measures",level:3},{value:"Dimensions",id:"dimensions",level:3},{value:"Rendering Your First Pivot Table",id:"rendering-your-first-pivot-table",level:2},{value:"Complete Example",id:"complete-example",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"getting-started-with-pivothead",children:"Getting Started with PivotHead"})}),"\n",(0,i.jsx)(n.p,{children:"This guide will walk you through the process of installing PivotHead, setting up a basic configuration, and creating your first pivot table."}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.p,{children:"To install PivotHead in your project, use your preferred package manager:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Using npm\nnpm install @mindfiredigital/pivothead\n\n# Using yarn\nyarn add @mindfiredigital/pivothead\n\n# Using pnpm\npnpm install @mindfiredigital/pivothead\n"})}),"\n",(0,i.jsx)(n.h2,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,i.jsx)(n.p,{children:"Here's how to set up a basic pivot table using PivotHead:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"import { PivotEngine } from '@mindfiredigital/pivothead';\n\n// Step 1: Prepare your data\nconst data = [\n  {\n    date: '2024-01-01',\n    product: 'Widget A',\n    region: 'North',\n    sales: 1000,\n    quantity: 50,\n  },\n  {\n    date: '2024-01-01',\n    product: 'Widget B',\n    region: 'South',\n    sales: 1500,\n    quantity: 60,\n  },\n  {\n    date: '2024-01-02',\n    product: 'Widget A',\n    region: 'East',\n    sales: 1200,\n    quantity: 55,\n  },\n  {\n    date: '2024-01-02',\n    product: 'Widget B',\n    region: 'West',\n    sales: 1800,\n    quantity: 70,\n  },\n  // ... more data\n];\n\n// Step 2: Create your configuration\nconst config = {\n  data: data,\n  rows: [{ uniqueName: 'product', caption: 'Product' }],\n  columns: [{ uniqueName: 'region', caption: 'Region' }],\n  measures: [\n    {\n      uniqueName: 'sales',\n      caption: 'Total Sales',\n      aggregation: 'sum',\n      format: {\n        type: 'currency',\n        currency: 'USD',\n        locale: 'en-US',\n        decimals: 2,\n      },\n    },\n  ],\n  dimensions: [\n    { field: 'product', label: 'Product', type: 'string' },\n    { field: 'region', label: 'Region', type: 'string' },\n    { field: 'date', label: 'Date', type: 'date' },\n    { field: 'sales', label: 'Sales', type: 'number' },\n    { field: 'quantity', label: 'Quantity', type: 'number' },\n  ],\n};\n\n// Step 3: Initialize the pivot engine\nconst engine = new PivotEngine(config);\n\n// Step 4: Use the engine to render your pivot table\n// (Actual rendering will depend on your UI framework)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"understanding-the-configuration",children:"Understanding the Configuration"}),"\n",(0,i.jsx)(n.p,{children:"Let's break down the key parts of the configuration:"}),"\n",(0,i.jsx)(n.h3,{id:"data",children:"Data"}),"\n",(0,i.jsx)(n.p,{children:"This is your raw dataset, typically an array of objects."}),"\n",(0,i.jsx)(n.h3,{id:"rows-and-columns",children:"Rows and Columns"}),"\n",(0,i.jsx)(n.p,{children:"These define the structure of your pivot table:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"rows: [{ uniqueName: 'product', caption: 'Product' }],\ncolumns: [{ uniqueName: 'region', caption: 'Region' }],\n"})}),"\n",(0,i.jsx)(n.p,{children:"This configuration will create a table with products as rows and regions as columns."}),"\n",(0,i.jsx)(n.h3,{id:"measures",children:"Measures"}),"\n",(0,i.jsx)(n.p,{children:"Measures are the values that will be calculated and displayed in the cells:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"measures: [\n  {\n    uniqueName: 'sales',       // Field name in your data\n    caption: 'Total Sales',    // Display name\n    aggregation: 'sum',        // How to aggregate values\n    format: {                  // How to format the display\n      type: 'currency',\n      currency: 'USD',\n      locale: 'en-US',\n      decimals: 2,\n    },\n  },\n],\n"})}),"\n",(0,i.jsx)(n.h3,{id:"dimensions",children:"Dimensions"}),"\n",(0,i.jsx)(n.p,{children:"Dimensions define the fields available for use in rows, columns, or filters:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"dimensions: [\n  { field: 'product', label: 'Product', type: 'string' },\n  { field: 'region', label: 'Region', type: 'string' },\n  { field: 'date', label: 'Date', type: 'date' },\n  { field: 'sales', label: 'Sales', type: 'number' },\n  { field: 'quantity', label: 'Quantity', type: 'number' },\n],\n"})}),"\n",(0,i.jsx)(n.h2,{id:"rendering-your-first-pivot-table",children:"Rendering Your First Pivot Table"}),"\n",(0,i.jsx)(n.p,{children:"After creating the PivotEngine, you'll need to render the results. Here's a simple example using vanilla JavaScript:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// Get a reference to your container element\nconst container = document.getElementById('pivot-container');\n\n// Function to render the pivot table\nfunction renderPivotTable() {\n  // Get the current state from the engine\n  const state = engine.getState();\n\n  // Clear the container\n  container.innerHTML = '';\n\n  // Create table element\n  const table = document.createElement('table');\n  table.className = 'pivot-table';\n\n  // Create header row\n  const thead = document.createElement('thead');\n  const headerRow = document.createElement('tr');\n\n  // Add empty cell for top-left corner\n  headerRow.appendChild(document.createElement('th'));\n\n  // Add column headers\n  state.columnHeaders.forEach(column => {\n    const th = document.createElement('th');\n    th.textContent = column.caption;\n    headerRow.appendChild(th);\n  });\n\n  thead.appendChild(headerRow);\n  table.appendChild(thead);\n\n  // Create table body\n  const tbody = document.createElement('tbody');\n\n  // Add rows\n  state.data.forEach(row => {\n    const tr = document.createElement('tr');\n\n    // Add row header\n    const th = document.createElement('th');\n    th.textContent = row.rowHeader;\n    tr.appendChild(th);\n\n    // Add cells\n    state.columnHeaders.forEach(column => {\n      const td = document.createElement('td');\n      const value = row[column.uniqueName] || 0;\n      td.textContent = engine.formatValue(value, 'sales');\n      tr.appendChild(td);\n    });\n\n    tbody.appendChild(tr);\n  });\n\n  table.appendChild(tbody);\n  container.appendChild(table);\n}\n\n// Initial render\nrenderPivotTable();\n"})}),"\n",(0,i.jsx)(n.h2,{id:"complete-example",children:"Complete Example"}),"\n",(0,i.jsx)(n.p,{children:"Here's a complete example that you can copy and paste into an HTML file to get started:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>PivotHead Example</title>\n    <style>\n      .pivot-table {\n        border-collapse: collapse;\n        width: 100%;\n        margin: 20px 0;\n      }\n      .pivot-table th,\n      .pivot-table td {\n        border: 1px solid #ddd;\n        padding: 8px;\n        text-align: right;\n      }\n      .pivot-table th {\n        background-color: #f2f2f2;\n        text-align: left;\n      }\n    </style>\n  </head>\n  <body>\n    <h1>PivotHead Example</h1>\n    <div id=\"pivot-container\"></div>\n\n    <script type=\"module\">\n      import { PivotEngine } from 'https://cdn.jsdelivr.net/npm/@mindfiredigital/pivothead/dist/index.js';\n\n      // Sample data\n      const data = [\n        {\n          date: '2024-01-01',\n          product: 'Widget A',\n          region: 'North',\n          sales: 1000,\n          quantity: 50,\n        },\n        {\n          date: '2024-01-01',\n          product: 'Widget B',\n          region: 'South',\n          sales: 1500,\n          quantity: 60,\n        },\n        {\n          date: '2024-01-02',\n          product: 'Widget A',\n          region: 'East',\n          sales: 1200,\n          quantity: 55,\n        },\n        {\n          date: '2024-01-02',\n          product: 'Widget B',\n          region: 'West',\n          sales: 1800,\n          quantity: 70,\n        },\n      ];\n\n      // Configuration\n      const config = {\n        data: data,\n        rows: [{ uniqueName: 'product', caption: 'Product' }],\n        columns: [{ uniqueName: 'region', caption: 'Region' }],\n        measures: [\n          {\n            uniqueName: 'sales',\n            caption: 'Total Sales',\n            aggregation: 'sum',\n            format: {\n              type: 'currency',\n              currency: 'USD',\n              locale: 'en-US',\n              decimals: 2,\n            },\n          },\n        ],\n        dimensions: [\n          { field: 'product', label: 'Product', type: 'string' },\n          { field: 'region', label: 'Region', type: 'string' },\n          { field: 'date', label: 'Date', type: 'date' },\n          { field: 'sales', label: 'Sales', type: 'number' },\n          { field: 'quantity', label: 'Quantity', type: 'number' },\n        ],\n      };\n\n      // Initialize the engine\n      const engine = new PivotEngine(config);\n\n      // Render function (simplified for demo)\n      function renderPivotTable() {\n        const container = document.getElementById('pivot-container');\n        container.innerHTML =\n          '<pre>' + JSON.stringify(engine.getState(), null, 2) + '</pre>';\n      }\n\n      // Initial render\n      renderPivotTable();\n    <\/script>\n  </body>\n</html>\n"})}),"\n",(0,i.jsx)(n.p,{children:"With these basics in place, you're ready to start building powerful data visualization tools with PivotHead!"})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var a=t(6540);const i={},o=a.createContext(i);function r(e){const n=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);