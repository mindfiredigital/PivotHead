"use strict";(self.webpackChunkdocument=self.webpackChunkdocument||[]).push([[261],{5680:(e,n,a)=>{a.d(n,{xA:()=>s,yg:()=>m});var t=a(6540);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var g=t.createContext({}),p=function(e){var n=t.useContext(g),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},s=function(e){var n=p(e.components);return t.createElement(g.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,g=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(a),d=r,m=u["".concat(g,".").concat(d)]||u[d]||c[d]||i;return a?t.createElement(m,o(o({ref:n},s),{},{components:a})):t.createElement(m,o({ref:n},s))}));function m(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=d;var l={};for(var g in n)hasOwnProperty.call(n,g)&&(l[g]=n[g]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},1367:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>g,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var t=a(8168),r=(a(6540),a(5680));const i={sidebar_position:2,title:"Api Reference",description:"Understanding the Api References of PivotHead"},o="API Reference",l={unversionedId:"tutorial-basics/api-reference",id:"tutorial-basics/api-reference",title:"Api Reference",description:"Understanding the Api References of PivotHead",source:"@site/docs/tutorial-basics/api-reference.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/api-reference",permalink:"/PivotHead/docs/tutorial-basics/api-reference",draft:!1,editUrl:"https://github.com/mindfiredigital/PivotHead/tree/main/documentation/docs/tutorial-basics/api-reference.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Api Reference",description:"Understanding the Api References of PivotHead"},sidebar:"tutorialSidebar",previous:{title:"Core Concepts",permalink:"/PivotHead/docs/tutorial-basics/core-concepts"},next:{title:"Examples & Usage",permalink:"/PivotHead/docs/tutorial-basics/examples"}},g={},p=[{value:"PivotEngine",id:"pivotengine",level:2},{value:"Constructor",id:"constructor",level:3},{value:"State Management",id:"state-management",level:3},{value:"getState()",id:"getstate",level:4},{value:"reset()",id:"reset",level:4},{value:"Data Manipulation",id:"data-manipulation",level:3},{value:"setMeasures()",id:"setmeasures",level:4},{value:"setDimensions()",id:"setdimensions",level:4},{value:"setAggregation()",id:"setaggregation",level:4},{value:"Formatting",id:"formatting",level:3},{value:"formatValue()",id:"formatvalue",level:4},{value:"Sorting and Grouping",id:"sorting-and-grouping",level:3},{value:"sort()",id:"sort",level:4},{value:"setGroupConfig()",id:"setgroupconfig",level:4},{value:"getGroupedData()",id:"getgroupeddata",level:4},{value:"Row and Column Manipulation",id:"row-and-column-manipulation",level:3},{value:"resizeRow()",id:"resizerow",level:4},{value:"toggleRowExpansion()",id:"togglerowexpansion",level:4},{value:"isRowExpanded()",id:"isrowexpanded",level:4},{value:"dragRow()",id:"dragrow",level:4},{value:"dragColumn()",id:"dragcolumn",level:4},{value:"Filtering and Pagination",id:"filtering-and-pagination",level:3},{value:"applyFilters()",id:"applyfilters",level:4},{value:"setPagination()",id:"setpagination",level:4},{value:"getFilterState()",id:"getfilterstate",level:4},{value:"getPaginationState()",id:"getpaginationstate",level:4},{value:"Export Features",id:"export-features",level:3},{value:"exportToHTML()",id:"exporttohtml",level:4},{value:"exportToExcel()",id:"exporttoexcel",level:4},{value:"exportToPDF()",id:"exporttopdf",level:4},{value:"openPrintDialog()",id:"openprintdialog",level:4},{value:"Configuration Interfaces",id:"configuration-interfaces",level:2},{value:"PivotTableConfig",id:"pivottableconfig",level:3},{value:"MeasureConfig",id:"measureconfig",level:3},{value:"Dimension",id:"dimension",level:3},{value:"FormatConfig",id:"formatconfig",level:3},{value:"FilterConfig",id:"filterconfig",level:3},{value:"PaginationConfig",id:"paginationconfig",level:3},{value:"GroupConfig",id:"groupconfig",level:3},{value:"ConditionalFormattingRule",id:"conditionalformattingrule",level:3}],s={toc:p},u="wrapper";function c(e){let{components:n,...a}=e;return(0,r.yg)(u,(0,t.A)({},s,a,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"api-reference"},"API Reference"),(0,r.yg)("h2",{id:"pivotengine"},"PivotEngine"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"PivotEngine")," class is the core of the PivotHead library, providing the functionality for data manipulation, formatting, and state management."),(0,r.yg)("h3",{id:"constructor"},"Constructor"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"constructor(config: PivotTableConfig<T>)\n")),(0,r.yg)("p",null,"Creates a new instance of PivotEngine with the given configuration."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"import { PivotEngine } from '@mindfiredigital/pivothead';\n\nconst config = {\n  data: myData,\n  rows: [{ uniqueName: 'product', caption: 'Product' }],\n  columns: [{ uniqueName: 'region', caption: 'Region' }],\n  measures: [\n    {\n      uniqueName: 'sales',\n      caption: 'Total Sales',\n      aggregation: 'sum',\n      format: {\n        type: 'currency',\n        currency: 'USD',\n        locale: 'en-US',\n        decimals: 2,\n      },\n    },\n  ],\n  // other configuration options...\n};\n\nconst engine = new PivotEngine(config);\n")),(0,r.yg)("h3",{id:"state-management"},"State Management"),(0,r.yg)("h4",{id:"getstate"},"getState()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"getState(): PivotTableState<T>\n")),(0,r.yg)("p",null,"Returns the current state of the pivot table."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"const state = engine.getState();\nconsole.log(state.data); // Logs the current data array\nconsole.log(state.sortConfig); // Logs the current sort configuration\n")),(0,r.yg)("h4",{id:"reset"},"reset()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"reset(): void\n")),(0,r.yg)("p",null,"Resets the pivot table to its initial state."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"engine.reset();\nconst state = engine.getState();\nconsole.log(state); // Logs the initial state\n")),(0,r.yg)("h3",{id:"data-manipulation"},"Data Manipulation"),(0,r.yg)("h4",{id:"setmeasures"},"setMeasures()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"setMeasures(measureFields: MeasureConfig[]): void\n")),(0,r.yg)("p",null,"Sets the measures for the pivot table."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"engine.setMeasures([\n  {\n    uniqueName: 'revenue',\n    caption: 'Total Revenue',\n    aggregation: 'sum',\n    format: {\n      type: 'currency',\n      currency: 'USD',\n      locale: 'en-US',\n      decimals: 2,\n    },\n  },\n  {\n    uniqueName: 'profit',\n    caption: 'Total Profit',\n    aggregation: 'sum',\n    format: {\n      type: 'currency',\n      currency: 'USD',\n      locale: 'en-US',\n      decimals: 2,\n    },\n  },\n]);\n")),(0,r.yg)("h4",{id:"setdimensions"},"setDimensions()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"setDimensions(dimensionFields: Dimension[]): void\n")),(0,r.yg)("p",null,"Sets the dimensions for the pivot table."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"engine.setDimensions([\n  { field: 'product', label: 'Product', type: 'string' },\n  { field: 'region', label: 'Region', type: 'string' },\n  { field: 'date', label: 'Date', type: 'date' },\n]);\n")),(0,r.yg)("h4",{id:"setaggregation"},"setAggregation()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"setAggregation(type: AggregationType): void\n")),(0,r.yg)("p",null,"Sets the aggregation type for the pivot table."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"engine.setAggregation('avg'); // Set aggregation to average\n")),(0,r.yg)("h3",{id:"formatting"},"Formatting"),(0,r.yg)("h4",{id:"formatvalue"},"formatValue()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"formatValue(value: any, field: string): string\n")),(0,r.yg)("p",null,"Formats a value based on the specified field's format configuration."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"const formattedValue = engine.formatValue(1000, 'sales');\nconsole.log(formattedValue); // \"$1,000.00\"\n")),(0,r.yg)("h3",{id:"sorting-and-grouping"},"Sorting and Grouping"),(0,r.yg)("h4",{id:"sort"},"sort()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"sort(field: string, direction: 'asc' | 'desc'): void\n")),(0,r.yg)("p",null,"Sorts the pivot table data."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"engine.sort('sales', 'desc'); // Sort by sales in descending order\n")),(0,r.yg)("h4",{id:"setgroupconfig"},"setGroupConfig()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"setGroupConfig(groupConfig: GroupConfig | null): void\n")),(0,r.yg)("p",null,"Sets the group configuration for the pivot table."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"engine.setGroupConfig({\n  rowFields: ['product'],\n  columnFields: ['region'],\n  grouper: (item, fields) => fields.map(field => item[field]).join(' - '),\n});\n")),(0,r.yg)("h4",{id:"getgroupeddata"},"getGroupedData()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"getGroupedData(): Group[]\n")),(0,r.yg)("p",null,"Returns the grouped data."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"const groupedData = engine.getGroupedData();\nconsole.log(groupedData); // Logs the grouped data structure\n")),(0,r.yg)("h3",{id:"row-and-column-manipulation"},"Row and Column Manipulation"),(0,r.yg)("h4",{id:"resizerow"},"resizeRow()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"resizeRow(index: number, height: number): void\n")),(0,r.yg)("p",null,"Resizes a specific row in the pivot table."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"engine.resizeRow(2, 50); // Resize row at index 2 to 50px height\n")),(0,r.yg)("h4",{id:"togglerowexpansion"},"toggleRowExpansion()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"toggleRowExpansion(rowId: string): void\n")),(0,r.yg)("p",null,"Toggles the expansion state of a row."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"engine.toggleRowExpansion('product-widget-a'); // Toggle expansion for a specific row\n")),(0,r.yg)("h4",{id:"isrowexpanded"},"isRowExpanded()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"isRowExpanded(rowId: string): boolean\n")),(0,r.yg)("p",null,"Checks if a specific row is expanded."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"const isExpanded = engine.isRowExpanded('product-widget-a');\nconsole.log(isExpanded); // true or false\n")),(0,r.yg)("h4",{id:"dragrow"},"dragRow()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"dragRow(fromIndex: number, toIndex: number): void\n")),(0,r.yg)("p",null,"Handles dragging a row to a new position."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"engine.dragRow(3, 5); // Move row from index 3 to index 5\n")),(0,r.yg)("h4",{id:"dragcolumn"},"dragColumn()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"dragColumn(fromIndex: number, toIndex: number): void\n")),(0,r.yg)("p",null,"Handles dragging a column to a new position."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"engine.dragColumn(1, 3); // Move column from index 1 to index 3\n")),(0,r.yg)("h3",{id:"filtering-and-pagination"},"Filtering and Pagination"),(0,r.yg)("h4",{id:"applyfilters"},"applyFilters()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"applyFilters(filters: FilterConfig[]): void\n")),(0,r.yg)("p",null,"Applies filters to the data based on the provided filter configurations."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"engine.applyFilters([\n  {\n    field: 'region',\n    operator: 'equals',\n    value: 'North',\n  },\n  {\n    field: 'sales',\n    operator: 'greaterThan',\n    value: 500,\n  },\n]);\n")),(0,r.yg)("h4",{id:"setpagination"},"setPagination()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"setPagination(config: PaginationConfig): void\n")),(0,r.yg)("p",null,"Sets the pagination configuration for the pivot table."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"engine.setPagination({\n  currentPage: 2,\n  pageSize: 20,\n});\n")),(0,r.yg)("h4",{id:"getfilterstate"},"getFilterState()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"getFilterState(): FilterConfig[]\n")),(0,r.yg)("p",null,"Returns the current filter configuration."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"const currentFilters = engine.getFilterState();\nconsole.log(currentFilters); // Array of current filter configurations\n")),(0,r.yg)("h4",{id:"getpaginationstate"},"getPaginationState()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"getPaginationState(): PaginationConfig\n")),(0,r.yg)("p",null,"Returns the current pagination configuration."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"const paginationInfo = engine.getPaginationState();\nconsole.log(\n  `Page ${paginationInfo.currentPage} of ${paginationInfo.totalPages}`\n);\n")),(0,r.yg)("h3",{id:"export-features"},"Export Features"),(0,r.yg)("h4",{id:"exporttohtml"},"exportToHTML()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"exportToHTML(fileName?: string): void\n")),(0,r.yg)("p",null,"Exports the pivot table to an HTML file with the given name."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"// Export with default name 'pivot-table.html'\nengine.exportToHTML();\n\n// Export with custom name\nengine.exportToHTML('q1-sales-report');\n")),(0,r.yg)("h4",{id:"exporttoexcel"},"exportToExcel()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"exportToExcel(fileName?: string): void\n")),(0,r.yg)("p",null,"Exports the pivot table to an Excel file with the given name."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"// Export with default name 'pivot-table.xlsx'\nengine.exportToExcel();\n\n// Export with custom name\nengine.exportToExcel('quarterly-sales-analysis');\n")),(0,r.yg)("h4",{id:"exporttopdf"},"exportToPDF()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"exportToPDF(fileName?: string): void\n")),(0,r.yg)("p",null,"Exports the pivot table to a PDF file with the given name."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"// Export with default name 'pivot-table.pdf'\nengine.exportToPDF();\n\n// Export with custom name\nengine.exportToPDF('sales-presentation');\n")),(0,r.yg)("h4",{id:"openprintdialog"},"openPrintDialog()"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"openPrintDialog(): void\n")),(0,r.yg)("p",null,"Opens the browser's print dialog to print the current pivot table."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"// Open print dialog to print the pivot table\nengine.openPrintDialog();\n")),(0,r.yg)("h2",{id:"configuration-interfaces"},"Configuration Interfaces"),(0,r.yg)("h3",{id:"pivottableconfig"},"PivotTableConfig"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"interface PivotTableConfig<T> {\n  data: T[];\n  rows: { uniqueName: string; caption: string }[];\n  columns: { uniqueName: string; caption: string }[];\n  measures: MeasureConfig[];\n  dimensions: Dimension[];\n  defaultAggregation?: AggregationType;\n  isResponsive?: boolean;\n  pageSize?: number;\n  groupConfig?: GroupConfig;\n  formatting?: Record<string, FormatConfig>;\n  conditionalFormatting?: ConditionalFormattingRule[];\n  dataSource?: {\n    type: 'remote' | 'file';\n    url?: string;\n    file?: File;\n  };\n  onRowDragEnd?: (fromIndex: number, toIndex: number, data: T[]) => void;\n  onColumnDragEnd?: (\n    fromIndex: number,\n    toIndex: number,\n    columns: Array<{ uniqueName: string; caption: string }>\n  ) => void;\n}\n")),(0,r.yg)("h3",{id:"measureconfig"},"MeasureConfig"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"interface MeasureConfig {\n  uniqueName: string;\n  caption: string;\n  aggregation: AggregationType;\n  format?: FormatConfig;\n  formula?: (item: any) => number;\n}\n")),(0,r.yg)("h3",{id:"dimension"},"Dimension"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"interface Dimension {\n  field: string;\n  label: string;\n  type: 'string' | 'number' | 'date' | 'boolean';\n}\n")),(0,r.yg)("h3",{id:"formatconfig"},"FormatConfig"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"interface FormatConfig {\n  type: 'number' | 'currency' | 'percentage' | 'date';\n  decimals?: number;\n  locale?: string;\n  currency?: string;\n  dateFormat?: string;\n}\n")),(0,r.yg)("h3",{id:"filterconfig"},"FilterConfig"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"interface FilterConfig {\n  field: string;\n  operator: 'equals' | 'contains' | 'greaterThan' | 'lessThan' | 'between';\n  value: any;\n}\n")),(0,r.yg)("h3",{id:"paginationconfig"},"PaginationConfig"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"interface PaginationConfig {\n  currentPage: number;\n  pageSize: number;\n  totalPages?: number; // Read-only, calculated internally\n}\n")),(0,r.yg)("h3",{id:"groupconfig"},"GroupConfig"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"interface GroupConfig {\n  rowFields: string[];\n  columnFields: string[];\n  grouper?: (item: any, fields: string[]) => string;\n}\n")),(0,r.yg)("h3",{id:"conditionalformattingrule"},"ConditionalFormattingRule"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"interface ConditionalFormattingRule {\n  value: {\n    type: 'Number' | 'Text' | 'Date';\n    operator: string;\n    value1: string;\n    value2?: string;\n  };\n  format: {\n    font?: string;\n    size?: string;\n    color?: string;\n    backgroundColor?: string;\n    bold?: boolean;\n    italic?: boolean;\n    underline?: boolean;\n  };\n}\n")))}c.isMDXComponent=!0}}]);