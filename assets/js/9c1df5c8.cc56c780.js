"use strict";(self.webpackChunkdocument=self.webpackChunkdocument||[]).push([[506],{5432:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"tutorial-basics/wrappers/vue","title":"Vue Wrapper","description":"A powerful Vue 3 wrapper for PivotHead that provides seamless integration with reactive data binding, TypeScript support, and Vue-specific optimizations. The wrapper bridges Vue applications with the PivotHead web component while maintaining full Vue ecosystem compatibility.","source":"@site/docs/tutorial-basics/wrappers/vue.md","sourceDirName":"tutorial-basics/wrappers","slug":"/tutorial-basics/wrappers/vue","permalink":"/PivotHead/docs/tutorial-basics/wrappers/vue","draft":false,"unlisted":false,"editUrl":"https://github.com/mindfiredigital/PivotHead/tree/main/documentation/docs/tutorial-basics/wrappers/vue.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"React Wrapper","permalink":"/PivotHead/docs/tutorial-basics/wrappers/react"},"next":{"title":"Troubleshooting","permalink":"/PivotHead/docs/tutorial-basics/troubleshooting"}}');var s=i(4848),o=i(8453);const a={},r="Vue Wrapper",l={},d=[{value:"Overview",id:"overview",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Component Hierarchy",id:"component-hierarchy",level:3},{value:"Bridge Implementation",id:"bridge-implementation",level:3},{value:"Installation",id:"installation",level:2},{value:"Basic Installation",id:"basic-installation",level:3},{value:"With Dependencies",id:"with-dependencies",level:3},{value:"Browser Support Setup",id:"browser-support-setup",level:3},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Simple Integration",id:"simple-integration",level:3},{value:"Display Modes",id:"display-modes",level:2},{value:"Default Mode - Complete Solution",id:"default-mode---complete-solution",level:3},{value:"Minimal Mode - Custom UI with Slots",id:"minimal-mode---custom-ui-with-slots",level:3},{value:"None Mode (Headless) - Complete Customization",id:"none-mode-headless---complete-customization",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Props",id:"props",level:3},{value:"Events",id:"events",level:3},{value:"Template Ref Methods",id:"template-ref-methods",level:3},{value:"Core Methods",id:"core-methods",level:4},{value:"Filtering &amp; Sorting",id:"filtering--sorting",level:4},{value:"Configuration",id:"configuration",level:4},{value:"Formatting",id:"formatting",level:4},{value:"Pagination",id:"pagination",level:4},{value:"View Modes",id:"view-modes",level:4},{value:"Export",id:"export",level:4},{value:"Drag &amp; Drop",id:"drag--drop",level:4},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Data Management",id:"1-data-management",level:3},{value:"2. Performance",id:"2-performance",level:3},{value:"3. Error Handling",id:"3-error-handling",level:3},{value:"4. Accessibility",id:"4-accessibility",level:3},{value:"5. Testing",id:"5-testing",level:3},{value:"Conclusion",id:"conclusion",level:2},{value:"Key Strengths",id:"key-strengths",level:3},{value:"Use Cases",id:"use-cases",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"vue-wrapper",children:"Vue Wrapper"})}),"\n",(0,s.jsx)(n.p,{children:"A powerful Vue 3 wrapper for PivotHead that provides seamless integration with reactive data binding, TypeScript support, and Vue-specific optimizations. The wrapper bridges Vue applications with the PivotHead web component while maintaining full Vue ecosystem compatibility."}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(n.p,{children:["The PivotHead Vue wrapper (",(0,s.jsx)(n.code,{children:"@mindfiredigital/pivothead-vue"}),") offers:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Vue 3 Reactivity"}),": Full integration with Vue's reactive system and deep watching"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"TypeScript Support"}),": Complete type definitions for all APIs and props"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Event Bridge"}),": Converts web component events to Vue events seamlessly"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Slot System"}),": Custom slot support for minimal mode customization"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Template Refs"}),": Direct access to all underlying web component methods"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Three Display Modes"}),": Default, minimal, and none (headless) modes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Performance Optimizations"}),": Vue-specific optimizations for large datasets"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsx)(n.h3,{id:"component-hierarchy",children:"Component Hierarchy"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Vue Application\n\u251c\u2500\u2500 PivotHead Vue Wrapper\n    \u251c\u2500\u2500 Web Component Bridge\n        \u251c\u2500\u2500 @mindfiredigital/pivothead-web-component\n            \u2514\u2500\u2500 @mindfiredigital/pivothead (Core Engine)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"bridge-implementation",children:"Bridge Implementation"}),"\n",(0,s.jsx)(n.p,{children:"The Vue wrapper acts as an intelligent bridge that handles:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Prop Reactivity"}),": Deep watching of props with proper change detection"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Event Translation"}),": Converting web component CustomEvents to Vue events"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Reference Management"}),": Template refs for method access and lifecycle management"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Data Serialization"}),": Converting reactive Vue data to plain objects for the web component"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"State Synchronization"}),": Keeping Vue state in sync with the pivot engine"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.h3,{id:"basic-installation",children:"Basic Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install @mindfiredigital/pivothead-vue\n"})}),"\n",(0,s.jsx)(n.h3,{id:"with-dependencies",children:"With Dependencies"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install @mindfiredigital/pivothead-vue vue@^3.0.0\n"})}),"\n",(0,s.jsx)(n.h3,{id:"browser-support-setup",children:"Browser Support Setup"}),"\n",(0,s.jsx)(n.p,{children:"For older browsers, you may need polyfills:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install @webcomponents/webcomponentsjs\n"})}),"\n",(0,s.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,s.jsx)(n.h3,{id:"simple-integration",children:"Simple Integration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-vue",children:"<template>\n  <PivotHead\n    :data=\"pivotData\"\n    :options=\"pivotOptions\"\n    @state-change=\"handleStateChange\"\n    @view-mode-change=\"handleViewModeChange\"\n    @pagination-change=\"handlePaginationChange\"\n  />\n</template>\n\n<script setup>\nimport { PivotHead } from '@mindfiredigital/pivothead-vue';\n\nconst pivotData = [\n  { name: 'John', age: 30, city: 'New York', sales: 1200 },\n  { name: 'Jane', age: 25, city: 'Los Angeles', sales: 800 },\n  { name: 'Bob', age: 35, city: 'New York', sales: 950 },\n  { name: 'Alice', age: 28, city: 'Los Angeles', sales: 1100 },\n];\n\nconst pivotOptions = {\n  rows: [{ uniqueName: 'city', caption: 'City' }],\n  columns: [{ uniqueName: 'age', caption: 'Age' }],\n  measures: [\n    { uniqueName: 'sales', caption: 'Total Sales', aggregation: 'sum' },\n  ],\n};\n\nconst handleStateChange = state => {\n  console.log('Pivot state changed:', state);\n};\n\nconst handleViewModeChange = data => {\n  console.log('View mode changed to:', data.mode);\n};\n\nconst handlePaginationChange = pagination => {\n  console.log('Pagination changed:', pagination);\n};\n<\/script>\n"})}),"\n",(0,s.jsx)(n.h2,{id:"display-modes",children:"Display Modes"}),"\n",(0,s.jsx)(n.h3,{id:"default-mode---complete-solution",children:"Default Mode - Complete Solution"}),"\n",(0,s.jsx)(n.p,{children:"The default mode provides a full-featured pivot table with all built-in controls and UI elements."}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:"Click to view the complete Default Mode example"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-vue",children:"<template>\n  <PivotHead\n    mode=\"default\"\n    :data=\"data\"\n    :options=\"options\"\n    @state-change=\"onStateChange\"\n  />\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport { PivotHead } from '@mindfiredigital/pivothead-vue';\n\nconst data = ref([\n  { country: 'USA', category: 'Electronics', sales: 1500 },\n  { country: 'UK', category: 'Clothing', sales: 800 },\n  // ... more data\n]);\n\nconst options = ref({\n  rows: [{ uniqueName: 'country', caption: 'Country' }],\n  columns: [{ uniqueName: 'category', caption: 'Category' }],\n  measures: [{ uniqueName: 'sales', caption: 'Sales', aggregation: 'sum' }],\n});\n\nconst onStateChange = state => {\n  console.log('Current state:', state);\n};\n<\/script>\n"})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Features:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Built-in filtering and sorting controls"}),"\n",(0,s.jsx)(n.li,{children:"Automatic pagination with configurable page sizes"}),"\n",(0,s.jsx)(n.li,{children:"Export functionality (Excel, PDF, HTML)"}),"\n",(0,s.jsx)(n.li,{children:"Drag-and-drop field management"}),"\n",(0,s.jsx)(n.li,{children:"Format customization popup"}),"\n",(0,s.jsx)(n.li,{children:"View mode switching (raw/processed)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"minimal-mode---custom-ui-with-slots",children:"Minimal Mode - Custom UI with Slots"}),"\n",(0,s.jsx)(n.p,{children:"Minimal mode provides slot-based customization for building custom interfaces while leveraging the core pivot engine."}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:"Click to view the complete Minimal Mode example"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-vue",children:'<template>\n  <PivotHead\n    mode="minimal"\n    :data="data"\n    :options="options"\n    :filters="activeFilters"\n    @state-change="handleStateChange"\n    @view-mode-change="handleViewModeChange"\n    @pagination-change="handlePaginationChange"\n  >\n    \x3c!-- Custom header with controls --\x3e\n    <template #header>\n      <div class="custom-toolbar">\n        <div class="filter-controls">\n          <select v-model="selectedField">\n            <option value="country">Country</option>\n            <option value="category">Category</option>\n          </select>\n          <input\n            v-model="filterValue"\n            placeholder="Filter value"\n            @keyup.enter="applyFilter"\n          />\n          <button @click="applyFilter">Apply Filter</button>\n          <button @click="clearFilters">Clear All</button>\n        </div>\n\n        <div class="view-controls">\n          <button @click="toggleViewMode">\n            {{\n              currentViewMode === \'processed\'\n                ? \'Show Raw Data\'\n                : \'Show Processed\'\n            }}\n          </button>\n          <button @click="exportData">Export Excel</button>\n        </div>\n\n        <div class="pagination-controls">\n          <select v-model="pageSize" @change="updatePageSize">\n            <option value="10">10 per page</option>\n            <option value="25">25 per page</option>\n            <option value="50">50 per page</option>\n          </select>\n        </div>\n      </div>\n    </template>\n\n    \x3c!-- Custom body with table implementation --\x3e\n    <template #body>\n      <div class="custom-table-container">\n        <table v-if="pivotState" class="pivot-table">\n          <thead>\n            <tr>\n              <th\n                v-for="(header, index) in tableHeaders"\n                :key="index"\n                @click="sortByColumn(header.field)"\n                :class="{ sortable: header.sortable, sorted: header.sorted }"\n              >\n                {{ header.caption }}\n                <span v-if="header.sorted" class="sort-indicator">\n                  {{ header.sortDirection === \'asc\' ? \'\u2191\' : \'\u2193\' }}\n                </span>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              v-for="(row, rowIndex) in displayData"\n              :key="rowIndex"\n              @click="openDrillDown(row)"\n              class="data-row"\n            >\n              <td v-for="(cell, cellIndex) in row" :key="cellIndex">\n                {{ formatCell(cell) }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        \x3c!-- Custom pagination --\x3e\n        <div class="pagination">\n          <button @click="previousPage" :disabled="currentPage <= 1">\n            Previous\n          </button>\n          <span>Page {{ currentPage }} of {{ totalPages }}</span>\n          <button @click="nextPage" :disabled="currentPage >= totalPages">\n            Next\n          </button>\n        </div>\n      </div>\n    </template>\n  </PivotHead>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from \'vue\';\nimport { PivotHead } from \'@mindfiredigital/pivothead-vue\';\n\n// Component state\nconst selectedField = ref(\'country\');\nconst filterValue = ref(\'\');\nconst activeFilters = ref([]);\nconst pivotState = ref(null);\nconst currentViewMode = ref(\'processed\');\nconst currentPage = ref(1);\nconst totalPages = ref(1);\nconst pageSize = ref(10);\n\n// Computed properties\nconst displayData = computed(() => {\n  if (!pivotState.value) return [];\n  return currentViewMode.value === \'processed\'\n    ? pivotState.value.processedData\n    : pivotState.value.rawData;\n});\n\nconst tableHeaders = computed(() => {\n  // Generate headers based on current view mode and pivot state\n  if (!pivotState.value) return [];\n  // Implementation depends on your data structure\n});\n\n// Methods\nconst applyFilter = () => {\n  if (selectedField.value && filterValue.value) {\n    activeFilters.value.push({\n      field: selectedField.value,\n      operator: \'contains\',\n      value: filterValue.value,\n    });\n    filterValue.value = \'\';\n  }\n};\n\nconst clearFilters = () => {\n  activeFilters.value = [];\n};\n\nconst toggleViewMode = () => {\n  currentViewMode.value =\n    currentViewMode.value === \'processed\' ? \'raw\' : \'processed\';\n};\n\nconst sortByColumn = field => {\n  // Implementation for custom sorting\n};\n\nconst formatCell = value => {\n  // Custom cell formatting\n  return typeof value === \'number\' ? value.toLocaleString() : value;\n};\n\nconst openDrillDown = row => {\n  console.log(\'Drill down into:\', row);\n};\n\n// Event handlers\nconst handleStateChange = state => {\n  pivotState.value = state;\n};\n\nconst handleViewModeChange = data => {\n  currentViewMode.value = data.mode;\n};\n\nconst handlePaginationChange = pagination => {\n  currentPage.value = pagination.currentPage;\n  totalPages.value = pagination.totalPages;\n};\n<\/script>\n\n<style scoped>\n.custom-toolbar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px;\n  background: #f8f9fa;\n  border-bottom: 1px solid #dee2e6;\n}\n\n.filter-controls,\n.view-controls,\n.pagination-controls {\n  display: flex;\n  gap: 8px;\n  align-items: center;\n}\n\n.pivot-table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.pivot-table th,\n.pivot-table td {\n  border: 1px solid #dee2e6;\n  padding: 8px 12px;\n  text-align: left;\n}\n\n.pivot-table th.sortable {\n  cursor: pointer;\n  user-select: none;\n}\n\n.pivot-table th:hover {\n  background-color: #e9ecef;\n}\n\n.data-row:hover {\n  background-color: #f8f9fa;\n}\n\n.pagination {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  padding: 16px;\n}\n</style>\n'})})]}),"\n",(0,s.jsx)(n.h3,{id:"none-mode-headless---complete-customization",children:"None Mode (Headless) - Complete Customization"}),"\n",(0,s.jsx)(n.p,{children:"None mode provides a completely headless approach where the component is hidden and you build a 100% custom UI."}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:"Click to view the complete None Mode (Headless) example"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-vue",children:'<template>\n  <div class="headless-pivot">\n    \x3c!-- Hidden PivotHead for data processing --\x3e\n    <PivotHead\n      ref="pivotRef"\n      mode="none"\n      :data="data"\n      :options="options"\n      :filters="filters"\n      @state-change="handleStateChange"\n      @view-mode-change="handleViewMode"\n      @pagination-change="handlePaginationChange"\n      style="display: none;"\n    />\n\n    \x3c!-- Completely custom UI --\x3e\n    <div class="custom-interface">\n      <header class="control-panel">\n        <div class="data-controls">\n          <button @click="addRandomData">Add Data</button>\n          <button @click="refreshPivot">Refresh</button>\n          <button @click="exportToExcel">Export Excel</button>\n        </div>\n\n        <div class="filter-panel">\n          <input\n            v-model="searchTerm"\n            placeholder="Search..."\n            @input="debounceSearch"\n          />\n          <select v-model="groupBy" @change="updateGrouping">\n            <option value="">No Grouping</option>\n            <option value="region">Group by Region</option>\n            <option value="product">Group by Product</option>\n          </select>\n        </div>\n      </header>\n\n      <main class="data-display">\n        <div v-if="isLoading" class="loading">Loading...</div>\n\n        <div v-else-if="currentViewMode === \'processed\'" class="pivot-grid">\n          \x3c!-- Custom pivot table implementation --\x3e\n          <div\n            v-for="(section, index) in processedSections"\n            :key="index"\n            class="pivot-section"\n          >\n            <h3>{{ section.title }}</h3>\n            <div class="grid">\n              \x3c!-- Custom grid rendering --\x3e\n            </div>\n          </div>\n        </div>\n\n        <div v-else class="raw-grid">\n          \x3c!-- Custom raw data table --\x3e\n          <div class="data-grid">\n            <div\n              v-for="(item, index) in filteredRawData"\n              :key="index"\n              class="data-item"\n              @click="selectItem(item)"\n            >\n              \x3c!-- Custom item rendering --\x3e\n            </div>\n          </div>\n        </div>\n      </main>\n\n      <footer class="summary-panel">\n        <div class="stats">\n          <span>Total Records: {{ totalRecords }}</span>\n          <span>Visible: {{ visibleRecords }}</span>\n          <span>Selected: {{ selectedRecords.length }}</span>\n        </div>\n      </footer>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch, nextTick } from \'vue\';\nimport { PivotHead } from \'@mindfiredigital/pivothead-vue\';\n\nconst pivotRef = ref();\nconst isLoading = ref(false);\nconst searchTerm = ref(\'\');\nconst groupBy = ref(\'\');\nconst currentViewMode = ref(\'processed\');\nconst pivotState = ref(null);\nconst selectedRecords = ref([]);\n\n// Computed data processing\nconst processedSections = computed(() => {\n  if (!pivotState.value?.processedData) return [];\n  // Custom processing logic for your UI\n});\n\nconst filteredRawData = computed(() => {\n  if (!pivotState.value?.rawData) return [];\n  // Custom filtering logic\n});\n\nconst totalRecords = computed(() => pivotState.value?.rawData?.length || 0);\nconst visibleRecords = computed(() => filteredRawData.value.length);\n\n// Methods\nconst addRandomData = () => {\n  // Add random data and trigger refresh\n};\n\nconst refreshPivot = () => {\n  pivotRef.value?.refresh();\n};\n\nconst exportToExcel = () => {\n  pivotRef.value?.exportToExcel(\'headless-export\');\n};\n\nconst updateGrouping = () => {\n  // Update pivot options based on groupBy selection\n};\n\nconst selectItem = item => {\n  const index = selectedRecords.value.findIndex(r => r.id === item.id);\n  if (index > -1) {\n    selectedRecords.value.splice(index, 1);\n  } else {\n    selectedRecords.value.push(item);\n  }\n};\n\n// Debounced search\nlet searchTimeout;\nconst debounceSearch = () => {\n  clearTimeout(searchTimeout);\n  searchTimeout = setTimeout(() => {\n    // Apply search filter\n  }, 300);\n};\n\n// Event handlers\nconst handleStateChange = state => {\n  pivotState.value = state;\n  isLoading.value = false;\n};\n\nconst handleViewMode = data => {\n  currentViewMode.value = data.mode;\n};\n\nconst handlePaginationChange = pagination => {\n  console.log(\'Pagination:\', pagination);\n};\n<\/script>\n'})})]}),"\n",(0,s.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,s.jsx)(n.h3,{id:"props",children:"Props"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Prop"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"mode"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'default' | 'minimal' | 'none'"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'default'"})}),(0,s.jsx)(n.td,{children:"Display mode"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"data"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"PivotDataRecord[]"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"Input data array"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"options"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"PivotOptions"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"Pivot configuration"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"filters"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FilterConfig[]"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"Active filters"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"pagination"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Partial<PaginationConfig>"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"Pagination settings"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"class"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"CSS class"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"style"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Record<string, string> | string"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{children:"Inline styles"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"events",children:"Events"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Event"}),(0,s.jsx)(n.th,{children:"Payload"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"@state-change"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"PivotTableState"})}),(0,s.jsx)(n.td,{children:"Emitted when pivot state changes"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"@view-mode-change"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"{ mode: 'raw' | 'processed' }"})}),(0,s.jsx)(n.td,{children:"Emitted when view mode changes"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"@pagination-change"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"PaginationConfig"})}),(0,s.jsx)(n.td,{children:"Emitted when pagination changes"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"template-ref-methods",children:"Template Ref Methods"}),"\n",(0,s.jsx)(n.p,{children:"Access these methods through template refs:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-vue",children:"<template>\n  <PivotHead ref=\"pivotRef\" ... />\n</template>\n\n<script setup>\nconst pivotRef = ref();\n\n// Use methods\nconst exportData = () => {\n  pivotRef.value?.exportToExcel('my-data');\n};\n<\/script>\n"})}),"\n",(0,s.jsx)(n.h4,{id:"core-methods",children:"Core Methods"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"getState()"})," - Get current pivot state"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"refresh()"})," - Refresh the pivot table"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"getData()"})," - Get raw input data"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"getProcessedData()"})," - Get processed pivot data"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"filtering--sorting",children:"Filtering & Sorting"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"sort(field: string, direction: 'asc' | 'desc')"})," - Sort by field"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"getFilters()"})," - Get current filters"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"getFilteredData()"})," - Get filtered raw data"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"getFilteredAndProcessedData()"})," - Get filtered and processed data"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"setMeasures(measures: MeasureConfig[])"})," - Update measures"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"setDimensions(dimensions: Dimension[])"})," - Update dimensions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"setGroupConfig(config: GroupConfig)"})," - Update grouping"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"formatting",children:"Formatting"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"formatValue(value: unknown, field: string)"})," - Format a value"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"updateFieldFormatting(field: string, format: FormatOptions)"})," - Update field formatting"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"getFieldAlignment(field: string)"})," - Get field text alignment"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"showFormatPopup()"})," - Show formatting popup"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pagination",children:"Pagination"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"getPagination()"})," - Get pagination state"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"previousPage()"})," - Go to previous page"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"nextPage()"})," - Go to next page"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"setPageSize(size: number)"})," - Set page size"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"goToPage(page: number)"})," - Go to specific page"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"view-modes",children:"View Modes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"setViewMode(mode: 'raw' | 'processed')"})," - Set view mode"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"getViewMode()"})," - Get current view mode"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"export",children:"Export"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"exportToHTML(fileName?: string)"})," - Export to HTML"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"exportToPDF(fileName?: string)"})," - Export to PDF"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"exportToExcel(fileName?: string)"})," - Export to Excel"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"openPrintDialog()"})," - Open print dialog"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"drag--drop",children:"Drag & Drop"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"swapRows(from: number, to: number)"})," - Swap row positions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"swapColumns(from: number, to: number)"})," - Swap column positions"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsx)(n.h3,{id:"1-data-management",children:"1. Data Management"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"Object.freeze()"})," for large, static datasets"]}),"\n",(0,s.jsx)(n.li,{children:"Implement proper data validation before passing to the component"}),"\n",(0,s.jsx)(n.li,{children:"Use computed properties for derived data"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"2-performance",children:"2. Performance"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"shallowRef"})," for large arrays to avoid deep reactivity"]}),"\n",(0,s.jsx)(n.li,{children:"Implement virtual scrolling for very large datasets in minimal mode"}),"\n",(0,s.jsx)(n.li,{children:"Debounce filter operations to avoid excessive re-rendering"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"3-error-handling",children:"3. Error Handling"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Always use optional chaining when calling template ref methods"}),"\n",(0,s.jsx)(n.li,{children:"Implement proper loading states"}),"\n",(0,s.jsx)(n.li,{children:"Handle network errors gracefully"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"4-accessibility",children:"4. Accessibility"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ensure proper ARIA labels in custom minimal mode implementations"}),"\n",(0,s.jsx)(n.li,{children:"Provide keyboard navigation support"}),"\n",(0,s.jsx)(n.li,{children:"Test with screen readers"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"5-testing",children:"5. Testing"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Mock the web component for unit tests"}),"\n",(0,s.jsx)(n.li,{children:"Test event emissions"}),"\n",(0,s.jsx)(n.li,{children:"Verify prop reactivity"}),"\n",(0,s.jsx)(n.li,{children:"Test error conditions"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsx)(n.p,{children:"The PivotHead Vue wrapper represents a sophisticated integration solution that bridges Vue 3 applications with powerful pivot table functionality. By leveraging Vue's reactive system, TypeScript support, and component architecture, it provides developers with a flexible and performant tool for data visualization and analysis."}),"\n",(0,s.jsx)(n.h3,{id:"key-strengths",children:"Key Strengths"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Seamless Integration"}),": The wrapper feels native to Vue applications while providing access to advanced pivot functionality"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Progressive Enhancement"}),": Start with default mode for rapid development, then customize with minimal or none modes as requirements grow"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Type Safety"}),": Complete TypeScript support ensures robust development experience and prevents runtime errors"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Performance Optimized"}),": Vue-specific optimizations handle large datasets efficiently while maintaining reactivity"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Developer Experience"}),": Comprehensive API, extensive documentation, and practical examples accelerate development"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"use-cases",children:"Use Cases"}),"\n",(0,s.jsx)(n.p,{children:"The Vue wrapper excels in:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Business Intelligence Dashboards"}),": Create interactive data exploration interfaces"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Reporting Applications"}),": Build customizable report viewers with export capabilities"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Data Analysis Tools"}),": Develop sophisticated data manipulation and visualization features"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Administrative Panels"}),": Implement complex data tables with filtering and sorting"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Customer-Facing Analytics"}),": Provide end-users with self-service data analysis capabilities"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Whether you're building a simple data display or a complex analytical dashboard, the PivotHead Vue wrapper provides the foundation for creating powerful, user-friendly data visualization experiences in Vue 3 applications. Its three-mode architecture ensures that you can start simple and scale complexity as your requirements evolve, making it an ideal choice for both rapid prototyping and production-ready applications."})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var t=i(6540);const s={},o=t.createContext(s);function a(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);