"use strict";(self.webpackChunkdocument=self.webpackChunkdocument||[]).push([[980],{5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>d});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),s=p(n),g=a,d=s["".concat(u,".").concat(g)]||s[g]||m[g]||o;return n?r.createElement(d,i(i({ref:t},c),{},{components:n})):r.createElement(d,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=g;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[s]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},2079:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(8168),a=(n(6540),n(5680));const o={sidebar_position:4},i="Quick Start Guide",l={unversionedId:"contributors/quick-start",id:"contributors/quick-start",title:"Quick Start Guide",description:"Get started with our monorepo setup in 5 minutes.",source:"@site/docs/contributors/quick-start.md",sourceDirName:"contributors",slug:"/contributors/quick-start",permalink:"/PivotHead/docs/contributors/quick-start",draft:!1,editUrl:"https://github.com/mindfiredigital/PivotHead/tree/main/documentation/docs/contributors/quick-start.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Monorepo Setup Guide",permalink:"/PivotHead/docs/contributors/monorepo-setup"}},u={},p=[{value:"1. Clone and Setup",id:"1-clone-and-setup",level:2},{value:"2. Development Workflow",id:"2-development-workflow",level:2},{value:"3. Making Changes",id:"3-making-changes",level:2},{value:"4. Publishing",id:"4-publishing",level:2},{value:"Need Help?",id:"need-help",level:2}],c={toc:p},s="wrapper";function m(e){let{components:t,...n}=e;return(0,a.yg)(s,(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"quick-start-guide"},"Quick Start Guide"),(0,a.yg)("p",null,"Get started with our monorepo setup in 5 minutes."),(0,a.yg)("h2",{id:"1-clone-and-setup"},"1. Clone and Setup"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"# Clone the repository\ngit clone https://github.com/mindfiredigital/reponame.git\ncd PivotHead\n\n# Install pnpm if you haven't already\nnpm install -g pnpm\n\n# Install dependencies\npnpm install\n")),(0,a.yg)("h2",{id:"2-development-workflow"},"2. Development Workflow"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"# Start development environment\npnpm dev\n\n# Build all packages\npnpm build\n\n# Run tests\npnpm test\n")),(0,a.yg)("h2",{id:"3-making-changes"},"3. Making Changes"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"Create a new branch:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"git checkout -b feature/your-feature\n")),(0,a.yg)("ol",{start:2},(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Make your changes")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Commit using conventional commits:"))),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},'git commit -m "feat(core): add new feature"\n# or\ngit commit -m "fix(react): fix bug"\n')),(0,a.yg)("ol",{start:4},(0,a.yg)("li",{parentName:"ol"},"Push and create a PR:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"git push origin feature/your-feature\n")),(0,a.yg)("h2",{id:"4-publishing"},"4. Publishing"),(0,a.yg)("p",null,"The release process is automated through GitHub Actions. When your PR is merged:"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"A changeset will be automatically generated"),(0,a.yg)("li",{parentName:"ol"},"A new version will be created"),(0,a.yg)("li",{parentName:"ol"},"Packages will be published to npm")),(0,a.yg)("h2",{id:"need-help"},"Need Help?"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Check the full ",(0,a.yg)("a",{parentName:"li",href:"/PivotHead/docs/contributors/monorepo-setup"},"Monorepo Setup Guide")),(0,a.yg)("li",{parentName:"ul"},"Open an issue on GitHub"),(0,a.yg)("li",{parentName:"ul"},"Contact the team")))}m.isMDXComponent=!0}}]);