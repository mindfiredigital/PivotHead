"use strict";(self.webpackChunkdocument=self.webpackChunkdocument||[]).push([[143],{2535:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"tutorial-basics/wrappers/react","title":"React Wrapper","description":"The PivotHead React Wrapper (@mindfiredigital/pivothead-react) is a thin, type-safe React component that bridges React applications with the PivotHead Web Component. It provides a seamless React developer experience while preserving all the functionality and modes of the underlying web component.","source":"@site/docs/tutorial-basics/wrappers/react.md","sourceDirName":"tutorial-basics/wrappers","slug":"/tutorial-basics/wrappers/react","permalink":"/PivotHead/docs/tutorial-basics/wrappers/react","draft":false,"unlisted":false,"editUrl":"https://github.com/mindfiredigital/PivotHead/tree/main/documentation/docs/tutorial-basics/wrappers/react.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"PivotHead Web Component","permalink":"/PivotHead/docs/tutorial-basics/web-component"},"next":{"title":"Vue Wrapper","permalink":"/PivotHead/docs/tutorial-basics/wrappers/vue"}}');var r=t(4848),d=t(8453);const s={sidebar_position:1},o="React Wrapper",l={},a=[{value:"Overview",id:"overview",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Bridge Design",id:"bridge-design",level:3},{value:"Key Components",id:"key-components",level:3},{value:"Installation",id:"installation",level:2},{value:"Peer Dependencies",id:"peer-dependencies",level:3},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Simple Integration",id:"simple-integration",level:3},{value:"Three Rendering Modes",id:"three-rendering-modes",level:2},{value:"1. Default Mode",id:"1-default-mode",level:3},{value:"2. Minimal Mode",id:"2-minimal-mode",level:3},{value:"3. None Mode (Headless)",id:"3-none-mode-headless",level:3},{value:"Component API Reference",id:"component-api-reference",level:2},{value:"Props",id:"props",level:3},{value:"Events",id:"events",level:3},{value:"Available Methods",id:"available-methods",level:4},{value:"1. Performance",id:"1-performance",level:3},{value:"2. Error Handling",id:"2-error-handling",level:3},{value:"3. Accessibility",id:"3-accessibility",level:3},{value:"4. Data Management",id:"4-data-management",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Browser Support",id:"browser-support",level:3},{value:"From Other Pivot Libraries",id:"from-other-pivot-libraries",level:3},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"react-wrapper",children:"React Wrapper"})}),"\n",(0,r.jsxs)(n.p,{children:["The PivotHead React Wrapper (",(0,r.jsx)(n.code,{children:"@mindfiredigital/pivothead-react"}),") is a thin, type-safe React component that bridges React applications with the PivotHead Web Component. It provides a seamless React developer experience while preserving all the functionality and modes of the underlying web component."]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"The React wrapper serves as an intelligent bridge that:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Preserves All Web Component Functionality"}),": Supports all three modes (default, minimal, none) with full feature parity"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Provides React-Native API"}),": Type-safe props, refs, and event handlers that feel natural in React applications"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Handles React-Specific Concerns"}),": Proper prop synchronization, event handling, and lifecycle management"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Maintains Performance"}),": Efficient updates and minimal re-rendering through smart prop management"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Offers TypeScript Support"}),": Full type definitions for all props, events, and methods"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,r.jsx)(n.h3,{id:"bridge-design",children:"Bridge Design"}),"\n",(0,r.jsx)(n.p,{children:"The wrapper acts as a bridge between React's declarative paradigm and the Web Component's imperative API:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"React App \u2192 React Wrapper \u2192 Web Component \u2192 PivotHead Engine\n    \u2191            \u2191              \u2191              \u2191\n Props/JSX   Type Safety   Custom Element   Core Logic\n"})}),"\n",(0,r.jsx)(n.h3,{id:"key-components",children:"Key Components"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PivotHead Component"}),": Main React wrapper component"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type Definitions"}),": Comprehensive TypeScript interfaces"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Event Handlers"}),": React-friendly event system"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ref API"}),": Imperative access to web component methods"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Prop Synchronization"}),": Efficient data flow management"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.p,{children:"Install the React wrapper in your React project:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install @mindfiredigital/pivothead-react\n"})}),"\n",(0,r.jsx)(n.p,{children:"The wrapper automatically includes the web component as a dependency, so no additional installations are needed."}),"\n",(0,r.jsx)(n.h3,{id:"peer-dependencies",children:"Peer Dependencies"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"React \u2265 17"}),"\n",(0,r.jsx)(n.li,{children:"React DOM \u2265 17"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,r.jsx)(n.h3,{id:"simple-integration",children:"Simple Integration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import React from 'react';\nimport { PivotHead } from '@mindfiredigital/pivothead-react';\n\nconst salesData = [\n  { country: 'USA', category: 'Electronics', sales: 1500, discount: 150 },\n  { country: 'Canada', category: 'Cars', sales: 1800, discount: 90 },\n  { country: 'Australia', category: 'Accessories', sales: 1200, discount: 120 },\n];\n\nconst options = {\n  rows: [{ uniqueName: 'country', caption: 'Country' }],\n  columns: [{ uniqueName: 'category', caption: 'Category' }],\n  measures: [\n    { uniqueName: 'sales', caption: 'Total Sales', aggregation: 'sum' },\n    { uniqueName: 'discount', caption: 'Total Discount', aggregation: 'sum' },\n  ],\n};\n\nexport default function App() {\n  return (\n    <div>\n      <h1>Sales Dashboard</h1>\n      <PivotHead mode=\"default\" data={salesData} options={options} />\n    </div>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"three-rendering-modes",children:"Three Rendering Modes"}),"\n",(0,r.jsx)(n.p,{children:"The React wrapper supports all three modes from the web component, each optimized for different use cases:"}),"\n",(0,r.jsx)(n.h3,{id:"1-default-mode",children:"1. Default Mode"}),"\n",(0,r.jsx)(n.p,{children:"Complete UI rendered by the component with built-in controls and functionality."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Click to view the complete Default Mode example"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import React, { useRef } from 'react';\nimport { PivotHead, PivotHeadRef } from '@mindfiredigital/pivothead-react';\n\nexport default function DefaultExample() {\n  const pivotRef = useRef<PivotHeadRef>(null);\n\n  const handleExport = () => {\n    pivotRef.current?.methods.exportToExcel('sales-report');\n  };\n\n  const switchToRawData = () => {\n    pivotRef.current?.methods.setViewMode('raw');\n  };\n\n  return (\n    <div>\n      <div style={{ marginBottom: 16, display: 'flex', gap: 8 }}>\n        <button onClick={switchToRawData}>View Raw Data</button>\n        <button onClick={handleExport}>Export Excel</button>\n      </div>\n\n      <PivotHead\n        ref={pivotRef}\n        mode=\"default\"\n        data={salesData}\n        options={options}\n        onStateChange={e => {\n          console.log('Pivot state changed:', e.detail);\n        }}\n      />\n    </div>\n  );\n}\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"2-minimal-mode",children:"2. Minimal Mode"}),"\n",(0,r.jsx)(n.p,{children:"Slot-based architecture where you provide custom header and body components."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Click to view the complete Minimal Mode example"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import React, { useState, useRef } from 'react';\nimport {\n  PivotHead,\n  PivotHeadRef,\n  PivotTableState,\n} from '@mindfiredigital/pivothead-react';\n\nexport default function MinimalExample() {\n  const pivotRef = useRef<PivotHeadRef>(null);\n  const [currentState, setCurrentState] = useState<PivotTableState | null>(\n    null\n  );\n  const [pageSize, setPageSize] = useState(10);\n\n  const handleStateChange = (e: CustomEvent<PivotTableState>) => {\n    setCurrentState(e.detail);\n  };\n\n  const handlePageSizeChange = (size: number) => {\n    setPageSize(size);\n    pivotRef.current?.methods.setPageSize(size);\n  };\n\n  const handleExport = () => {\n    pivotRef.current?.methods.exportToPDF('custom-report');\n  };\n\n  // Custom toolbar component\n  const CustomToolbar = () => (\n    <div\n      className=\"custom-toolbar\"\n      style={{\n        display: 'flex',\n        gap: 12,\n        padding: 12,\n        background: '#f8f9fa',\n        borderRadius: 6,\n        marginBottom: 12,\n      }}\n    >\n      <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\n        <label>Page Size:</label>\n        <select\n          value={pageSize}\n          onChange={e => handlePageSizeChange(Number(e.target.value))}\n        >\n          <option value={5}>5</option>\n          <option value={10}>10</option>\n          <option value={25}>25</option>\n          <option value={50}>50</option>\n        </select>\n      </div>\n\n      <div style={{ marginLeft: 'auto', display: 'flex', gap: 8 }}>\n        <button\n          onClick={() => pivotRef.current?.methods.setViewMode('processed')}\n        >\n          Processed\n        </button>\n        <button onClick={() => pivotRef.current?.methods.setViewMode('raw')}>\n          Raw Data\n        </button>\n        <button onClick={handleExport}>Export PDF</button>\n      </div>\n    </div>\n  );\n\n  // Custom table component\n  const CustomTable = () => {\n    if (!currentState?.processedData) return <div>Loading...</div>;\n\n    const { headers, rows } = currentState.processedData;\n\n    return (\n      <table\n        style={{\n          width: '100%',\n          borderCollapse: 'collapse',\n          border: '1px solid #dee2e6',\n        }}\n      >\n        <thead>\n          <tr style={{ backgroundColor: '#e9ecef' }}>\n            {headers.map((header: string, index: number) => (\n              <th\n                key={index}\n                style={{\n                  padding: '12px 8px',\n                  textAlign: 'left',\n                  borderBottom: '2px solid #dee2e6',\n                  fontWeight: 600,\n                }}\n              >\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row: any[], rowIndex: number) => (\n            <tr\n              key={rowIndex}\n              style={{\n                borderBottom: '1px solid #dee2e6',\n                ':hover': { backgroundColor: '#f8f9fa' },\n              }}\n            >\n              {row.map((cell: any, cellIndex: number) => (\n                <td\n                  key={cellIndex}\n                  style={{\n                    padding: '8px',\n                    borderRight: '1px solid #dee2e6',\n                  }}\n                >\n                  {cell}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  };\n\n  return (\n    <PivotHead\n      ref={pivotRef}\n      mode=\"minimal\"\n      data={salesData}\n      options={options}\n      onStateChange={handleStateChange}\n      headerSlot={<CustomToolbar />}\n      bodySlot={<CustomTable />}\n    />\n  );\n}\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"3-none-mode-headless",children:"3. None Mode (Headless)"}),"\n",(0,r.jsx)(n.p,{children:"Complete UI control with access to all pivot functionality through the component API."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Click to view the complete None Mode (Headless) example"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import React, { useState, useRef, useEffect } from 'react';\nimport { PivotHead, PivotHeadRef, PivotTableState, FilterConfig } from '@mindfiredigital/pivothead-react';\n\nexport default function HeadlessExample() {\n  const pivotRef = useRef<PivotHeadRef>(null);\n  const [pivotState, setPivotState] = useState<PivotTableState | null>(null);\n  const [filters, setFilters] = useState<FilterConfig[]>([]);\n  const [viewMode, setViewMode] = useState<'processed' | 'raw'>('processed');\n  const [pagination, setPagination] = useState({\n    currentPage: 1,\n    totalPages: 1,\n    pageSize: 10\n  });\n\n  const handleStateChange = (e: CustomEvent<PivotTableState>) => {\n    setPivotState(e.detail);\n  };\n\n  const handlePaginationChange = (e: CustomEvent) => {\n    setPagination(e.detail);\n  };\n\n  const applyFilter = (field: string, operator: string, value: string) => {\n    const newFilters = [{ field, operator, value }] as FilterConfig[];\n    setFilters(newFilters);\n  };\n\n  const clearFilters = () => {\n    setFilters([]);\n  };\n\n  const changePageSize = (size: number) => {\n    pivotRef.current?.methods.setPageSize(size);\n  };\n\n  const goToPage = (page: number) => {\n    pivotRef.current?.methods.goToPage(page);\n  };\n\n  return (\n    <div style={{ display: 'flex', height: '100vh' }}>\n      {/* Hidden pivot component */}\n      <PivotHead\n        ref={pivotRef}\n        mode=\"none\"\n        data={salesData}\n        options={options}\n        filters={filters}\n        onStateChange={handleStateChange}\n        onPaginationChange={handlePaginationChange}\n        style={{ display: 'none' }}\n      />\n\n      {/* Custom Control Panel */}\n      <div style={{\n        width: 300,\n        padding: 20,\n        background: '#f8f9fa',\n        borderRight: '1px solid #dee2e6'\n      }}>\n        <h3>Pivot Controls</h3>\n\n        <div style={{ marginBottom: 20 }}>\n          <h4>View Mode</h4>\n          <div>\n            <label>\n              <input\n                type=\"radio\"\n                checked={viewMode === 'processed'}\n                onChange={() => {\n                  setViewMode('processed');\n                  pivotRef.current?.methods.setViewMode('processed');\n                }}\n              />\n              Processed Data\n            </label>\n          </div>\n          <div>\n            <label>\n              <input\n                type=\"radio\"\n                checked={viewMode === 'raw'}\n                onChange={() => {\n                  setViewMode('raw');\n                  pivotRef.current?.methods.setViewMode('raw');\n                }}\n              />\n              Raw Data\n            </label>\n          </div>\n        </div>\n\n        <div style={{ marginBottom: 20 }}>\n          <h4>Quick Filters</h4>\n          <button\n            onClick={() => applyFilter('sales', 'greaterThan', '1000')}\n            style={{ display: 'block', marginBottom: 8, width: '100%' }}\n          >\n            Sales > $1000\n          </button>\n          <button\n            onClick={() => applyFilter('country', 'equals', 'USA')}\n            style={{ display: 'block', marginBottom: 8, width: '100%' }}\n          >\n            USA Only\n          </button>\n          <button\n            onClick={clearFilters}\n            style={{ display: 'block', width: '100%' }}\n          >\n            Clear Filters\n          </button>\n        </div>\n\n        <div style={{ marginBottom: 20 }}>\n          <h4>Page Size</h4>\n          <select\n            value={pagination.pageSize}\n            onChange={(e) => changePageSize(Number(e.target.value))}\n          >\n            <option value={5}>5 per page</option>\n            <option value={10}>10 per page</option>\n            <option value={25}>25 per page</option>\n            <option value={50}>50 per page</option>\n          </select>\n        </div>\n\n        <div style={{ marginBottom: 20 }}>\n          <h4>Export Options</h4>\n          <button\n            onClick={() => pivotRef.current?.methods.exportToExcel()}\n            style={{ display: 'block', marginBottom: 8, width: '100%' }}\n          >\n            Export Excel\n          </button>\n          <button\n            onClick={() => pivotRef.current?.methods.exportToPDF()}\n            style={{ display: 'block', marginBottom: 8, width: '100%' }}\n          >\n            Export PDF\n          </button>\n          <button\n            onClick={() => pivotRef.current?.methods.openPrintDialog()}\n            style={{ display: 'block', width: '100%' }}\n          >\n            Print\n          </button>\n        </div>\n      </div>\n\n      {/* Custom Results Area */}\n      <div style={{ flex: 1, padding: 20, overflow: 'auto' }}>\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 20 }}>\n          <h2>Sales Analysis Results</h2>\n          <div>\n            Page {pagination.currentPage} of {pagination.totalPages}\n          </div>\n        </div>\n\n        {/* Summary Statistics */}\n        <div style={{ display: 'flex', gap: 20, marginBottom: 20 }}>\n          <div style={{\n            background: 'white',\n            padding: 16,\n            borderRadius: 8,\n            border: '1px solid #dee2e6',\n            flex: 1\n          }}>\n            <div style={{ fontSize: 24, fontWeight: 'bold', color: '#007bff' }}>\n              {salesData.length}\n            </div>\n            <div>Total Records</div>\n          </div>\n          <div style={{\n            background: 'white',\n            padding: 16,\n            borderRadius: 8,\n            border: '1px solid #dee2e6',\n            flex: 1\n          }}>\n            <div style={{ fontSize: 24, fontWeight: 'bold', color: '#28a745' }}>\n              ${salesData.reduce((sum, item) => sum + item.sales, 0).toLocaleString()}\n            </div>\n            <div>Total Sales</div>\n          </div>\n          <div style={{\n            background: 'white',\n            padding: 16,\n            borderRadius: 8,\n            border: '1px solid #dee2e6',\n            flex: 1\n          }}>\n            <div style={{ fontSize: 24, fontWeight: 'bold', color: '#ffc107' }}>\n              {new Set(salesData.map(item => item.country)).size}\n            </div>\n            <div>Countries</div>\n          </div>\n        </div>\n\n        {/* Custom Data Table */}\n        {pivotState?.processedData && (\n          <CustomDataTable\n            data={pivotState.processedData}\n            onSort={(field, direction) => {\n              pivotRef.current?.methods.sort(field, direction);\n            }}\n          />\n        )}\n\n        {/* Pagination Controls */}\n        <div style={{\n          display: 'flex',\n          justifyContent: 'center',\n          gap: 8,\n          marginTop: 20\n        }}>\n          <button\n            onClick={() => goToPage(pagination.currentPage - 1)}\n            disabled={pagination.currentPage <= 1}\n          >\n            Previous\n          </button>\n          <span style={{\n            padding: '6px 12px',\n            background: '#e9ecef',\n            borderRadius: 4\n          }}>\n            {pagination.currentPage} / {pagination.totalPages}\n          </span>\n          <button\n            onClick={() => goToPage(pagination.currentPage + 1)}\n            disabled={pagination.currentPage >= pagination.totalPages}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Custom table component with sorting\nfunction CustomDataTable({ data, onSort }: {\n  data: { headers: string[], rows: any[][] },\n  onSort: (field: string, direction: 'asc' | 'desc') => void\n}) {\n  const [sortField, setSortField] = useState<string | null>(null);\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\n\n  const handleSort = (field: string) => {\n    const newDirection = sortField === field && sortDirection === 'asc' ? 'desc' : 'asc';\n    setSortField(field);\n    setSortDirection(newDirection);\n    onSort(field, newDirection);\n  };\n\n  return (\n    <table style={{\n      width: '100%',\n      borderCollapse: 'collapse',\n      background: 'white',\n      border: '1px solid #dee2e6',\n      borderRadius: 8\n    }}>\n      <thead>\n        <tr style={{ backgroundColor: '#f8f9fa' }}>\n          {data.headers.map((header: string, index: number) => (\n            <th\n              key={index}\n              onClick={() => handleSort(header)}\n              style={{\n                padding: '12px 8px',\n                textAlign: 'left',\n                borderBottom: '2px solid #dee2e6',\n                cursor: 'pointer',\n                userSelect: 'none'\n              }}\n            >\n              <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n                {header}\n                {sortField === header && (\n                  <span style={{ fontSize: 12 }}>\n                    {sortDirection === 'asc' ? '\u2191' : '\u2193'}\n                  </span>\n                )}\n              </div>\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {data.rows.map((row: any[], rowIndex: number) => (\n          <tr\n            key={rowIndex}\n            style={{\n              borderBottom: '1px solid #dee2e6',\n              ':hover': { backgroundColor: '#f8f9fa' }\n            }}\n          >\n            {row.map((cell: any, cellIndex: number) => (\n              <td\n                key={cellIndex}\n                style={{\n                  padding: '8px',\n                  borderRight: cellIndex < row.length - 1 ? '1px solid #dee2e6' : 'none'\n                }}\n              >\n                {typeof cell === 'number' && data.headers[cellIndex].includes('Sales')\n                  ? `$${cell.toLocaleString()}`\n                  : cell}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n"})})]}),"\n",(0,r.jsx)(n.h2,{id:"component-api-reference",children:"Component API Reference"}),"\n",(0,r.jsx)(n.h3,{id:"props",children:"Props"}),"\n",(0,r.jsx)(n.p,{children:"The PivotHead component accepts the following props:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Prop"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"mode"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"'default' | 'minimal' | 'none'"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"'default'"})}),(0,r.jsx)(n.td,{children:"Rendering mode"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"data"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"PivotDataRecord[]"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Dataset to analyze"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"PivotOptions"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Pivot configuration"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"filters"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"FilterConfig[]"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Active filters"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"pagination"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Partial<PaginationConfig>"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Pagination settings"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"className"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"CSS class name"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"style"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"React.CSSProperties"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Inline styles"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"headerSlot"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"React.ReactNode"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Header content for minimal mode"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bodySlot"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"React.ReactNode"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Body content for minimal mode"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"events",children:"Events"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Event"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onStateChange"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"(e: CustomEvent<PivotTableState>) => void"})}),(0,r.jsx)(n.td,{children:"Fired when pivot state changes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onViewModeChange"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"(e: CustomEvent<{mode: 'raw' | 'processed'}>) => void"})}),(0,r.jsx)(n.td,{children:"Fired when view mode changes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onPaginationChange"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"(e: CustomEvent<PaginationConfig>) => void"})}),(0,r.jsx)(n.td,{children:"Fired when pagination changes"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"available-methods",children:"Available Methods"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Method"}),(0,r.jsx)(n.th,{children:"Parameters"}),(0,r.jsx)(n.th,{children:"Returns"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"getState()"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"PivotTableState"})}),(0,r.jsx)(n.td,{children:"Get current state"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"refresh()"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"void"})}),(0,r.jsx)(n.td,{children:"Refresh the pivot"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"sort(field, direction)"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"field: string, direction: 'asc' | 'desc'"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"void"})}),(0,r.jsx)(n.td,{children:"Sort by field"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"setMeasures(measures)"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"measures: MeasureConfig[]"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"void"})}),(0,r.jsx)(n.td,{children:"Update measures"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"setDimensions(dimensions)"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"dimensions: Dimension[]"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"void"})}),(0,r.jsx)(n.td,{children:"Update dimensions"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"getFilters()"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"FilterConfig[]"})}),(0,r.jsx)(n.td,{children:"Get current filters"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"getPagination()"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"PaginationConfig"})}),(0,r.jsx)(n.td,{children:"Get pagination state"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"getData()"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"PivotDataRecord[]"})}),(0,r.jsx)(n.td,{children:"Get raw data"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"getProcessedData()"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"unknown"})}),(0,r.jsx)(n.td,{children:"Get processed data"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"setPageSize(size)"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"size: number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"void"})}),(0,r.jsx)(n.td,{children:"Set page size"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"goToPage(page)"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"page: number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"void"})}),(0,r.jsx)(n.td,{children:"Navigate to page"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"nextPage()"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"void"})}),(0,r.jsx)(n.td,{children:"Go to next page"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"previousPage()"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"void"})}),(0,r.jsx)(n.td,{children:"Go to previous page"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"setViewMode(mode)"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"mode: 'raw' | 'processed'"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"void"})}),(0,r.jsx)(n.td,{children:"Switch view mode"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"getViewMode()"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"'raw' | 'processed'"})}),(0,r.jsx)(n.td,{children:"Get current view mode"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"exportToHTML(filename?)"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"filename?: string"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"void"})}),(0,r.jsx)(n.td,{children:"Export as HTML"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"exportToPDF(filename?)"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"filename?: string"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"void"})}),(0,r.jsx)(n.td,{children:"Export as PDF"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"exportToExcel(filename?)"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"filename?: string"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"void"})}),(0,r.jsx)(n.td,{children:"Export as Excel"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"openPrintDialog()"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"void"})}),(0,r.jsx)(n.td,{children:"Open print dialog"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"formatValue(value, field)"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"value: unknown, field: string"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Format a value"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"updateFieldFormatting(field, format)"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"field: string, format: FormatOptions"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"void"})}),(0,r.jsx)(n.td,{children:"Update field formatting"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"showFormatPopup()"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"void"})}),(0,r.jsx)(n.td,{children:"Show format dialog"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"1-performance",children:"1. Performance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"React.memo"})," for components that receive stable props"]}),"\n",(0,r.jsxs)(n.li,{children:["Memoize expensive calculations with ",(0,r.jsx)(n.code,{children:"useMemo"})]}),"\n",(0,r.jsx)(n.li,{children:"Debounce rapid state changes to prevent excessive re-renders"}),"\n",(0,r.jsx)(n.li,{children:"Consider virtualization for very large datasets"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-error-handling",children:"2. Error Handling"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Always wrap pivot components in error boundaries"}),"\n",(0,r.jsx)(n.li,{children:"Validate data before passing to the component"}),"\n",(0,r.jsx)(n.li,{children:"Handle loading and error states gracefully"}),"\n",(0,r.jsx)(n.li,{children:"Provide meaningful error messages to users"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"3-accessibility",children:"3. Accessibility"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ensure proper ARIA labels for screen readers"}),"\n",(0,r.jsx)(n.li,{children:"Support keyboard navigation"}),"\n",(0,r.jsx)(n.li,{children:"Use semantic HTML elements"}),"\n",(0,r.jsx)(n.li,{children:"Test with accessibility tools"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"4-data-management",children:"4. Data Management"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Validate data structure before passing to the component"}),"\n",(0,r.jsx)(n.li,{children:"Handle missing or invalid data gracefully"}),"\n",(0,r.jsx)(n.li,{children:"Consider implementing data caching for large datasets"}),"\n",(0,r.jsx)(n.li,{children:"Use TypeScript for better data type safety"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Component not rendering"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ensure data is in the correct format"}),"\n",(0,r.jsx)(n.li,{children:"Check that options are properly configured"}),"\n",(0,r.jsx)(n.li,{children:"Verify that the web component is loaded"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"TypeScript errors"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Import types from the correct package"}),"\n",(0,r.jsx)(n.li,{children:"Ensure data matches expected interface"}),"\n",(0,r.jsx)(n.li,{children:"Check that ref types are properly defined"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Performance issues"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Implement proper memoization"}),"\n",(0,r.jsx)(n.li,{children:"Consider pagination for large datasets"}),"\n",(0,r.jsx)(n.li,{children:"Use React DevTools to identify re-render causes"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Event handlers not working"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ensure proper event listener setup"}),"\n",(0,r.jsx)(n.li,{children:"Check that component ref is properly attached"}),"\n",(0,r.jsx)(n.li,{children:"Verify event handler function signatures"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"browser-support",children:"Browser Support"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Modern browsers (Chrome 67+, Firefox 63+, Safari 12+, Edge 79+)"}),"\n",(0,r.jsx)(n.li,{children:"React 17+ required"}),"\n",(0,r.jsx)(n.li,{children:"Web Components support (use polyfills for older browsers)"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"from-other-pivot-libraries",children:"From Other Pivot Libraries"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Update imports"}),": Replace old library imports with PivotHead React"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Convert configuration"}),": Map old config format to PivotHead options"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Update event handlers"}),": Use React-style event props"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Migrate custom UI"}),": Use appropriate mode (minimal or none) for customization"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsx)(n.p,{children:"The PivotHead React Wrapper provides a seamless bridge between React applications and the powerful PivotHead pivot table functionality. With its three rendering modes, comprehensive TypeScript support, and React-native API, it enables developers to quickly integrate sophisticated data analysis capabilities into their React applications while maintaining full control over the user experience."}),"\n",(0,r.jsx)(n.p,{children:"Whether you need a drop-in solution with the default mode, customizable UI with minimal mode, or complete control with none mode, the React wrapper adapts to your requirements while preserving all the underlying pivot functionality."})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var i=t(6540);const r={},d=i.createContext(r);function s(e){const n=i.useContext(d);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);